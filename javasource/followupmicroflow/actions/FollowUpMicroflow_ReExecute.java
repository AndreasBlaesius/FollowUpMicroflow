// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package followupmicroflow.actions;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import followupmicroflow.FUEHelpers;
import followupmicroflow.proxies.Microflow;
import com.mendix.systemwideinterfaces.core.IMendixObject;

/**
 * ReExecutes the FollowUpMicroflow from the given log entry
 */
public class FollowUpMicroflow_ReExecute extends CustomJavaAction<java.lang.Boolean>
{
	private IMendixObject __followUpMicroflowLog;
	private followupmicroflow.proxies.FollowUpMicroflowLog followUpMicroflowLog;

	public FollowUpMicroflow_ReExecute(IContext context, IMendixObject followUpMicroflowLog)
	{
		super(context);
		this.__followUpMicroflowLog = followUpMicroflowLog;
	}

	@Override
	public java.lang.Boolean executeAction() throws Exception
	{
		this.followUpMicroflowLog = __followUpMicroflowLog == null ? null : followupmicroflow.proxies.FollowUpMicroflowLog.initialize(getContext(), __followUpMicroflowLog);

		// BEGIN USER CODE
		Microflow fum = followUpMicroflowLog.getFollowUpMicroflowLog_FollowUpMicroflow();
		try {
			if(followUpMicroflowLog.getHasParameter()) {
				IMendixObject parameter = Core.retrieveId(getContext(), Core.createMendixIdentifier(followUpMicroflowLog.getParameterID()));
				Core.execute(getContext(), fum.getMicroflowName(), parameter);
			}else {
				Core.execute(getContext(), fum.getMicroflowName());
			}
		}catch(Exception e) {
			FUEHelpers.writeErrorLog(Core.createSystemContext(), followUpMicroflowLog, e);
			throw new RuntimeException(e.getMessage(), e);
		}
		
		followUpMicroflowLog.setIsReExecuted(true);
		followUpMicroflowLog = FUEHelpers.writeEndLog(getContext(), followUpMicroflowLog);
		
		return true;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public java.lang.String toString()
	{
		return "FollowUpMicroflow_ReExecute";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
